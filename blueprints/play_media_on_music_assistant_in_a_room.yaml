blueprint:
  name: Play Music on Music Assistant Extended
  description:
    "Play any music you want on any Music Assistant speaker\nRequirements:\n
    \ - Media Player coming from the Music Assistant integration\n  - OpenAI Conversation
    **configured with the prompt found [here](https://gist.github.com/jlpouffier/8d5dc8a6b94f42f4929bfd1df2f22008)**\n"
  domain: automation
  author: jozefKruszynski
  homeassistant:
    min_version: 2023.8.0
  input:
    assist_command:
      name: Assist Command
      description:
        "The Assist command you will use to start the music\nYou can change
        the overall sentence to match your style and language. \n**WARNING** you **MUST**
        include `{query}` in order to pass that variable to OpenAI.\n"
      default: Play {query} in the {area}
      selector:
        text: {}
    open_ai_config_entry:
      name: OpenAI Configuration
      description: The OpenAI configuration **configured with the prompt found [here](https://gist.github.com/jlpouffier/8d5dc8a6b94f42f4929bfd1df2f22008)**
      selector:
        config_entry:
          integration: openai_conversation
    additional_conditions:
      name: Additional conditions
      description:
        "Extra conditions you may want to add to this automation \n(Example:
        Home occupied, Speaker on, etc)\n"
      default: []
      selector:
        condition: {}
  source_url: https://github.com/jlpouffier/home-assistant-config/blob/master/blueprints/automation/perso/play_media_on_music_assistant.yaml
trigger:
  - platform: conversation
    command: !input assist_command
condition: !input additional_conditions
variables:
  area: "{{trigger.slots.area}}"
action:
  - service: conversation.process
    data:
      agent_id: !input open_ai_config_entry
      text: "{{trigger.slots.query}}"
    response_variable: response_from_ai
  - service: mass.play_media
    data: "{{response_from_ai.response.speech.plain.speech|from_json}}"
    target:
      entity_id: >
        {% set ns = namespace(final_entity = "") %}
        {% for entity in integration_entities('mass') if entity | contains(area | regex_replace("[.]","")|regex_replace("[ ]","_")| lower) %}
        {% set ns.final_entity = entity %}
        {% endfor %}
        {{ns.final_entity}}
mode: single
